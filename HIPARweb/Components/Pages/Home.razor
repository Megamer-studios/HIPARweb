@page "/"
@using System.Timers
@rendermode InteractiveServer
@inject IJSRuntime jsRuntime
<PageTitle>HIPAR</PageTitle>


<div style=" width: 100%; margin:auto;min-height: 100%; height: 100%;">

    <div style="background-color:darkred; height:10%; min-height:10%;">
        <h1 style="background-color: darkred; font-family: 'Public Pixel'; color: black;">HIPAR</h1>
        <h1 style="background-color: darkred; font-family: 'Public Pixel'; color: black; font-size: 12pt;">(Highly Intelligent Processing Airgtonyte Result)</h1>
        </div>
    <div class="crt"  style=" background-color:#050505; height: 85%; min-height: 85%; font-family:'Public Pixel'; font-size:16px;">
       
        @foreach (var command in commandList)
        { 
            @if (command.Zaman != DateTime.MinValue)
            {
              <span style="color:#222222; font-weight:200;">[@command.Zaman.ToShortTimeString()] &nbsp;
            </span>
            }            
            @if (command.IsHTMLMarkup)
            {
                @((MarkupString)command.Text)
            }
            else
            {
                @if (command.IsTypeWriter)
                {
                    <div class="typewriter">
                        <p  style="color:@command.Color; font-size:@(command.FontSize)px;">@command.Text</p>
                </div>
                    
                }
                else
                {
                    <span style="color:@command.Color; font-size:@(command.FontSize)px;">@command.Text</span>
                    <br />
                }
                
            }
        
          
        }
    </div>
    <div style="background-color: black; top: 95%;height:5%; min-height:5%; position: fixed; width: 100%; display: flex;">
        <input @bind="inputCommand" @onkeypress="inputKeyPress" class="noborder" style="font-family: 'Public Pixel'; color:aliceblue; width: 100%; background-color: black; border: none;" />
        <button @onclick="sendButtonClick">SEND</button>
    </div>

</div>




@code {
    private List<CommandItemClass> commandList { get; set; } = new List<CommandItemClass>();
    private string? inputCommand { get; set; }
    private System.Timers.Timer _timer;
    private Random _random { get; set; }
    private bool secret;
    private int attempts;
    private bool yn;
    private int ynl = 0;
    private bool starte;
    private bool HTMLw;
    private int pingProg;
    private bool ntworkType;
    private bool IsTimerVisible;
    private bool NetworkConnected;
    private bool Unable = true;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _random = new Random();
        terminalInit();
        _timer = new();
        _timer.Interval = 1000;
        _timer.Elapsed += async (object? sender, ElapsedEventArgs e) =>
        {
            int rndValue = _random.Next(0, 10000000);

            if (rndValue >= 0 && rndValue <= 1000000)
            {

            }
            else if (rndValue >= 1000000 && rndValue <= 1100000)
            {

            }
            else if (rndValue >= 1100000 && rndValue <= 1100500)
            {
                if (NetworkConnected == false)
                {
                    CommandItemClass terminalWifiLine = new CommandItemClass();
                    terminalWifiLine.Text = "Error code 0x3345S: My boss keeps telling me to write down a cool network error so anyways if you encounter this error the Wi-Fi network is \" gmhipar \"";
                    terminalWifiLine.Color = "#f31000";
                    commandList.Add(terminalWifiLine);
                }

            }
            if (IsTimerVisible == true)
            {
                CommandItemClass terminalTestLine = new CommandItemClass();
                terminalTestLine.Text = rndValue.ToString();
                commandList.Add(terminalTestLine);

            }
            else if (rndValue >= 0 && rndValue <= 100)
            {
                Guru();
            }
            if (IsTimerVisible == true)  {
                CommandItemClass terminalTestLine = new CommandItemClass();
                terminalTestLine.Text = rndValue.ToString();
                commandList.Add(terminalTestLine);
            }
            await InvokeAsync(StateHasChanged);
        };
        _timer.Enabled = true;
    }
    private void sendButtonClick()
    {
        processCommand();


    }
    private void inputKeyPress(KeyboardEventArgs keyboardK)
    {
        if (keyboardK.Code == "Enter" || keyboardK.Code == "NumpadEnter")
        {
            processCommand();
        }
    }
    private void processCommand()
    {


        if (String.IsNullOrEmpty(inputCommand) && Unable == true)
        {

        }
        else
        {
            CommandItemClass newCommandItemObject = new CommandItemClass();
            newCommandItemObject.Text = inputCommand;
            newCommandItemObject.Zaman = DateTime.Now;
            commandList.Add(newCommandItemObject);
            if (yn == false)
            {
                if (inputCommand.ToLower() == "nya")
                {
                    newCommandItemObject.Color = "#ffffff";
                }
                else if (inputCommand.ToLower() == "help")
                {
                    CommandItemClass terminalHelpLine = new CommandItemClass();
                    terminalHelpLine.FontSize = 20;
                    terminalHelpLine.Text = "\"help\" is not a valid command yet HIPAR is still in its training process";
                    terminalHelpLine.Color = "#ff0000";
                    terminalHelpLine.IsTypeWriter = true;
                    commandList.Add(terminalHelpLine);
                }
                else if (inputCommand.ToLower() == "process: info")
                {
                    CommandItemClass terminalInfoLine = new CommandItemClass();
                    terminalInfoLine.Text = @"
        <pre style="" color: #ffffff; font-size: 24px;"">
          _    _ _____ _____        _____
         | |  | |_   _|  __ \ /\   |  __ \
         | |__| | | | | |__) /  \  | |__) |
         |  __  | | | |  ___/ /\ \ |  _  /
         | |  | |_| |_| |  / ____ \| | \ \
         |_|  |_|_____|_| /_/    \_\_|  \_\
        </pre>"; 
                    terminalInfoLine.IsHTMLMarkup = true;
                    commandList.Add(terminalInfoLine);
                    CommandItemClass terminalInfoLine2 = new CommandItemClass();
                    terminalInfoLine2.Text = " \r\n(Highly Intelligent Processing Arigtonyte Result).";
                    terminalInfoLine2.FontSize = 20;
                    terminalInfoLine2.Color = "#aecfe7";
                    terminalInfoLine2.IsTypeWriter = true;
                    commandList.Add(terminalInfoLine2);
                    CommandItemClass terminalInfoLine3 = new CommandItemClass();
                    terminalInfoLine3.Text = "\r\nA Highly intelligent processing system based on\r\nThe Arygtonite Framework\r\n";
                    terminalInfoLine3.FontSize = 20;
                    terminalInfoLine3.Color = "#aecfe7";
                    terminalInfoLine3.IsTypeWriter = true;
                    commandList.Add(terminalInfoLine3);

                }
                else if (inputCommand.ToLower() == "process: hisui")
                {
                    Hisuii();
                    CommandItemClass terminalHisuiLine = new CommandItemClass();

                    terminalHisuiLine.Text = "https://www.who.int/news-room/fact-sheets/detail/suicide";
                    terminalHisuiLine.Color = "#ff0000";

                    commandList.Add(terminalHisuiLine);
                }

                else if (inputCommand.ToLower() == "process: knowledge")
                {
                    Knowi();
                    CommandItemClass terminalKnowLine = new CommandItemClass();

                    terminalKnowLine.Text = "Follow your heart,\nAnd you'll find,\nWhat's right,";
                    terminalKnowLine.Color = "#aecfe7";
                    terminalKnowLine.IsTypeWriter = true;
                    commandList.Add(terminalKnowLine);
                }
                else if (inputCommand.ToLower() == "process: wr11sr")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalVisaLine = new CommandItemClass();
                        terminalVisaLine.Text = "<!DOCTYPE html><html><head>    <title>akumarin daddy</title>    <style>        .Text {            text-align: center;            font-family: 'Courier New', Courier, monospace;            color: white;            scale: 125%;            font-family: sans-serif;        }        .wr11srTwitter {            text-align: center;        }        .Discord,        .Youtube {            color: white;            display: inline-block;            vertical-align: top;        }        .Discord {            text-align: right;            font-family: 'Courier New', Courier, monospace;        }        .Youtube {            text-align: justify;            margin-left: 20px; /* Adjust the margin as needed */        }    </style></head><body style=\"background-color: black\">    <div class=\"Text\">        <h1>            ignore this text        </h1>    </div>    <div></div>    <div class=\"Text\">        <h1>            welcome to wr11sr's portfolio :skull:        </h1>    </div>    <div class=\"wr11srTwitter\">        <a href=\"https://twitter.com/heroofhylia5707\">            <button style=\"background-color:blue\">                <h1 style=\"color:aquamarine\">my twitter frfr!!!1!1!1!1!1!</h1>            </button>        </a>    </div>    <div class=\"Discord\">        <h3>My Discord server</h3>        <iframe src=\"https://discord.com/widget?id=1120005959310393354&theme=dark\" width=\"350\" height=\"500\"            allowtransparency=\"true\" frameborder=\"0\" sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"></iframe>    </div>    <div class=\"Youtube\">        <h1>my fav video of all time (not really)</h1>        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/bt3_q8z0dzw?si=hu36ku6d0iWHLANt\"            title=\"YouTube video player\" frameborder=\"0\"            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"            allowfullscreen></iframe>    </div></body></html>";
                        terminalVisaLine.IsHTMLMarkup = true;
                        commandList.Add(terminalVisaLine);
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: laila")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalDumbLine = new CommandItemClass();
                        terminalDumbLine.Text = "<img src=\"https://www.gamemaster.net.tr/wp-content/uploads/2024/04/GLtl1-vW4AAGwKG.jpeg\" style=\"width: 1920px; height: 500px;\">";
                        terminalDumbLine.IsHTMLMarkup = true;
                        commandList.Add(terminalDumbLine);
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: spring")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalSpringLine = new CommandItemClass();
                        terminalSpringLine.Text = "<!DOCTYPE html><html lang=\"en\"><head>    <link href=\"https://fonts.cdnfonts.com/css/roblox-new\" rel=\"stylesheet\">                                    <meta charset=\"UTF-8\">    <title>SPRING PJSK</title>    <link href=\"logo.png\" rel=\"icon\">    <style>        body {  background-image: url('background.png');  background-repeat: no-repeat;  background-position: 50%;  background-clip: border-box;  background-color: #ffcb83;  background-size:auto}.logo {  position: fixed;  margin-left: 68%;  scale: 55%;  margin-top: 43%;  opacity:65%;}        .topnav {  background-color: #ffc933;  overflow: hidden;  z-index: 1;}.topnav .first {  float: left;  color: rgb(255, 255, 255);  text-align: center;  padding: 14px 16px;  text-decoration: none;  font-size: 24pt;  font-family: 'Gotham Black', sans-serif;                                                                                      }.topnav .first:hover {  float: left;  color: rgb(255, 255, 255);  text-align: center;  padding: 14px 16px;  text-decoration: none;  font-size: 26pt;  font-family: 'Gotham Black', sans-serif;                                                                                      }.topnav .end   {float: right;color: rgb(255, 255, 255);text-align: center;padding: 50px 16px;text-decoration: none;font-size: 28pt;font-family: 'Gotham Black', sans-serif;text-shadow: 2px 2px #000000}.topnav .end:hover  {margin: auto;float: right;color: rgb(255, 255, 255);text-align: center;padding: 49px 16px;text-decoration: none;font-size: 29pt;font-family: 'Gotham Black', sans-serif;text-shadow: 2px 2px #006eff}.topnav .mid   {float: left;color: rgb(255, 255, 255);text-align: center;padding: 50px 16px;text-decoration: none;font-size: 12pt;font-family: 'Gotham Black', sans-serif;text-shadow: 2px 2px #000000}.topnav .mid:hover  {float: left;color: rgb(255, 255, 255);text-align: center;padding: 40px 16px;text-decoration: none;font-size: 14pt;font-family: 'Gotham Black', sans-serif;text-shadow: 2px 2px #006eff}.head {    margin: auto;    text-align: center;    margin-top: 100px;    font-family: 'Gotham Black', sans-serif;    overflow: hidden;    width: 43%;   font-size: 44pt;   color: #ffffff;   text-shadow: 2px 2px #cccccc  }.head:hover {    margin: auto;    text-align: center;    margin-top: 100px;    font-family: 'Gotham Black', sans-serif;    overflow: hidden;    width: 43%;   font-size: 44pt;   color: #ffffff;   text-shadow: 2px 2px #000000  }.para {    margin: auto;    text-align: center;    margin-top: 100px;    background-color: #f0f0f0;    overflow: hidden;    width: 43%;    min-height:207px;    font-size: 24pt;   color: #000000;   font-family: 'Gotham Black', sans-serif;    }.para img {    margin-top: 30px;}.para img:hover {    margin-top: 30px;    scale: 150%;    border: 5px solid black;}.para span {  color: #242424;}.para:hover {  scale: 110%;}.para .paraj {  font-size: 90pt;  color: #8abdff;}.para .paraj:hover {  font-size: 90pt;  color: #197dff;}    </style></head><body><div class=\"logo\">  <img src=\"logo.png\"></div>    <div class=\"topnav\">      <a class=\"first\" href=\"index.html\"><h1><b>SPRING PJSK</b></h1></a>      <a class=\"mid\" href=\"logs.html\"><h1><b>DUMB LOGS</b></h1></a>      <a class=\"mid\" href=\"staff.html\"><h1><b>STAFF TEAM</b></h1></a>      <a class=\"mid\" href=\"cast.html\"><h1><b>CAST</b></h1></a>      <a class=\"end\" href=\"https://github.com/Megamer-studios/\" target=\"_blank\">Developer</a>      </div>      <div class=\"head\">        <h1>Spring PJSK</h1>        <h1 style=\"color: #8abdff; font-size: 24pt;\">A Discord server</h1>      </div>      <div class=\"para\">        <h1>Community</h1>        <span>Spring Project Sekai offers a wide variety of people to talk to. You can Communicate with lots of people and make friends.</span>      </div>      <div class=\"para\">        <h1>Fandoms</h1>        <span>There are lots of channels dedicated to specific fandoms where you can share your experiences with.</span>      </div>      <div class=\"para\">        <h1>Partnerships</h1>        <span>We are partnered with great communities.</span>        <a href=\"https://discord.gg/ygNNUAAWMU\" target=\"_blank\"><h1  class=\"paraj\" style=\"font-size: 32pt;\"><b>Wr11speedrun's Korok Lab</b></h1></a>        <a href=\"https://discord.com/invite/CQngtvXfug\" target=\"_blank\"><h1  class=\"paraj\" style=\"font-size: 32pt;\"><b>ALYPOO'S HANGOUT</b></h1></a>      </div>      <div class=\"para\">       <a href=\"https://discord.gg/JSyUbG4SBc\" target=\"_blank\"> <h1 class=\"paraj\" >Join</h1></a>       </div>      <div class=\"para\">        <iframe src=\"https://discord.com/widget?id=1223483117843779584&theme=dark\" width=\"800\" height=\"500\" allowtransparency=\"true\" frameborder=\"0\" sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"></iframe>      </div>      </body></html>";
                        terminalSpringLine.IsHTMLMarkup = true;
                        commandList.Add(terminalSpringLine);
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: cow")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalCowLine = new CommandItemClass();
                        terminalCowLine.Text = "<img src=\"https://cdn.britannica.com/55/174255-050-526314B6/brown-Guernsey-cow.jpg\">";

                        terminalCowLine.IsHTMLMarkup = true;
                        commandList.Add(terminalCowLine);
                    }
                    else
                    {

                        Invalid();
                    }

                }
                else if (inputCommand.ToLower() == "process: aquamarine")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalAquaLine = new CommandItemClass();
                        terminalAquaLine.Text = "      <style>             .toplogo {        text-align: center;        scale: 70%;        opacity: 100%;       }       .Header {        text-align: center;        color: aquamarine;        scale: 150%;        font-family: 'Public Pixel', sans-serif;        text-shadow: 2px 2px rgb(1, 100, 70);        outline: 5px dotted aquamarine;       }       .Para {        width: 800px;       margin: auto;                text-align: center;        color: aquamarine;        scale: 130%;        font-family: 'Public Pixel', sans-serif;        text-shadow: 2px 2px rgb(1, 100, 70);             }       .space {        height: 65px;       }        </style>    </head>    <body style=\"background-color: black;\">        <div class=\"toplogo\">            <img src=\"https://www.gamemaster.net.tr/wp-content/uploads/2024/02/Aquamarine-Dev.png\">        </div>           <div class=\"Header\">    <h1>About me</h1>   </div>   <div class=\"space\">       </div>   <div class=\"Para\">    <p>My name is Cem Ozoral. I am 14 years old. My house is in Istanbul, in a complex where all the villas are. I work as a freelancer hobbyist and get home every day by 5 PM at the latest. I am obsessed with DUMPLINGS. I am usually in bed by 4 AM and make sure I get at least four hours of sleep, no matter what. After having some water and watching about eighty minutes of anime before going to bed, I usually have lots of problems sleeping until morning, so I wake up even more sleepy. I was told there were no issues at my last check-up.</p>   </div>   <div class=\"space\">       </div>   <div class=\"Header\">    <h1>Skills</h1>   </div>   <div class=\"space\">       </div>      <div class=\"Para\">   <h1>Programming/Coding</h1>   </div>   <div class=\"space\">       </div>   <div class=\"Para\">    <h2>C#</h2>    <h2>Python</h2>    <h2>(HTML/CSS)</h2>    <h2>Visual JS</h2>    </div>    <div class=\"space\">        </div>    <div class=\"Para\">        <h1>Graphic Design</h1>        </div>        <div class=\"space\">            </div>        <div class=\"Para\">            <h2>Adobe Photoshop</h2>            <h2>Adobe Animate</h2>            <h2>Adobe Dimension</h2>            <h2>Adobe Premiere Pro</h2>            <h2>Adobe After Effects</h2>            <h2>Blender</h2>            <h2>Aseprite</h2>            <h2>Clip Studio</h2>                    </div>            <div class=\"space\">                </div>            <div class=\"Para\">                <h1>Art/Drawin/Painting</h1>                </div>                <div class=\"space\">                    </div>                <div class=\"Para\">                    <h2>Adobe Photoshop</h2>                    <h2>Adobe Animate</h2>                    <h2>Firealpaca</h2>                    <h2>Jump Paint</h2>                    <h2>Medibang Paint Pro</h2>                    <h2>Blender</h2>                    <h2>Aseprite</h2>                    <h2>Clip Studio</h2>                                    </div>                    <div class=\"space\">                        </ div >                                         <div class=\"Header\">                            <h1>Projects</h1>                           </div>                                    <div class=\"space\">                               </div>                                           <div class=\"Para\">                    <a href=\"https://discord.gg/wWMFGgDMgH\" target=\"_blank\" >                        <h2 style=\"color: rgb(236, 88, 162);\" >Minecraft Ruby Mod</h2>                    </a>                                                   <a href=\"https://megamerstudios.itch.io/\" target=\"_blank\" >                        <h2 style=\"color: rgb(241, 51, 108);\" >itch.io</h2>                    </a>                                                  <a href=\"https://www.gamemaster.net.tr/\" target=\"_blank\" >                        <h2 style=\" color: rgb(6, 43, 255);\" >GameMaster</h2>                    </a>                                                   <a href=\"https://discord.gg/KC8RNYE4kH\" target=\"_blank\" >                        <h2 style=\"color: rgb(88, 113, 255);\" >Discord</h2>                    </a>                                                    <a href=\"https://www.roblox.com/groups/13074732/MEGAMER-GAME-STUDIOS#!/about\" target=\"_blank\" >                        <h2 style=\" color: rgb(165, 165, 165);\" >Roblox</h2>   </a>                        <a href=\"https://github.com/Megamer-studios/AquamarIDE\" target=\"_blank\" >                            <h2 style=\" color: rgb(6, 255, 222);\" >AquamarIDE</h2>                        </a>                        <a href=\"https://github.com/Megamer-studios\" target=\"_blank\" >                            <h2 style=\" color: rgb(66, 66, 66);\" >Github</h2>                        </a>                </div>                <div class=\"space\">                    </div>                <div class=\"Header\">                    <h1>Contact</h1>                   </div>                      <div class=\"space\">                       </div>                   <div class=\"Para\">                    <h2>Twitter/X: @AquamarineHo</h2>                    <h2>Mail: cozoral@outlook.com</h2>                    <h2>Discord: aquamarine__hoshino_</h2>                   </div>                   <div class=\"space\">                       </div>                   <div class=\"Header\">                    <h1>Social Media</h1>                   </div>                      <div class=\"space\">                       </div>                   <div class=\"Para\">                    <h2>Twitter/X: @AquamarineHo</h2>                    <h2>Reddit: u/giantvar </h2>                    <h2>Discord: aquamarine__hoshino_</h2>                                   </div>                   <div class=\"space\">                       </div>                   <div class=\"Header\">                    <h1>Copyright Megamer Studios 2024</h1>                   </div>                                               <div class=\"Header\">                    <a href=\"https://www.gamemaster.net.tr/Portfolio/Len/\" ><h1>THE GREATEST OF ALL TIME MODE</h1></a>                   </div>      </body></html>                              ";
                        terminalAquaLine.IsTypeWriter = true;
                        terminalAquaLine.IsHTMLMarkup = true;
                        commandList.Add(terminalAquaLine);

                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: astolfo")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalAssLine = new CommandItemClass();
                        terminalAssLine.Text = "<img src=\"https://www.gamemaster.net.tr/wp-content/uploads/2024/01/6ddc8727b8c5ea521ab770a1cc3d43d6.jpg\">";
                        terminalAssLine.IsTypeWriter = true;
                        terminalAssLine.IsHTMLMarkup = true;
                        commandList.Add(terminalAssLine);
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: writemode: html")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalHt1Line = new CommandItemClass();
                        terminalHt1Line.Text = "WriteMode set to \"HTML\"";
                        terminalHt1Line.IsTypeWriter = true;
                        terminalHt1Line.Color = "#ffffff";
                        commandList.Add(terminalHt1Line);
                        HTMLw = true;
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: sex")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalSexLine = new CommandItemClass();
                        terminalSexLine.Text = "plap plap plap plap* get pregnant get pregnant";
                        terminalSexLine.IsTypeWriter = true;    
                        commandList.Add(terminalSexLine);
                        Thread.Sleep(3000);

                        CommandItemClass terminalSex2Line = new CommandItemClass();
                        terminalSex2Line.Text = "<div style=\"height: 100%; width: 100%; background-color: black; z-index: 99999;\"></div>";
                        terminalSex2Line.IsHTMLMarkup = true;
                        commandList.Add(terminalSex2Line);
                        Guru();
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: len")
                {
                    if (secret == true)
                    {
                        CommandItemClass terminalLenLine = new CommandItemClass();
                        terminalLenLine.Text = "<video controls=\"\"> <source src=\"https://www.gamemaster.net.tr/spring/vds/methsound.mp4\" type=\"video/mp4\">Your browser does not support the video tag. </video>";
                        terminalLenLine.IsHTMLMarkup = true;
                        commandList.Add(terminalLenLine);

                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: log: timer")
                {
                    if (secret == true)
                    {
                        if (IsTimerVisible == false) {
                            CommandItemClass terminalTimeryLine = new CommandItemClass();
                            terminalTimeryLine.Text = "Timer Log Enabled";
                            commandList.Add(terminalTimeryLine);
                            IsTimerVisible = true;
                        }
                        else if (IsTimerVisible == true)
                        {
                            CommandItemClass terminalTimernLine = new CommandItemClass();
                            terminalTimernLine.Text = "Timer Log Disabled";
                            commandList.Add(terminalTimernLine);
                            IsTimerVisible = false;
                        }
                    }
                    else
                    {
                        Invalid();
                    }
                }
                else if (inputCommand.ToLower() == "process: secret")
                {
                    if (secret == false)
                    {
                        secret = true;
                        CommandItemClass terminalSec1Line = new CommandItemClass();
                        terminalSec1Line.Text = "Secret mode enabled!";
                        terminalSec1Line.IsTypeWriter = true;
                        terminalSec1Line.Color = "#f7f701";
                        commandList.Add(terminalSec1Line);
                    }
                    else if (secret == true)
                    {
                        secret = false;
                        CommandItemClass terminalSec2Line = new CommandItemClass();
                        terminalSec2Line.Text = "Secret mode disabled!";
                        terminalSec2Line.IsTypeWriter = true;
                        terminalSec2Line.Color = "#f7f701";
                        commandList.Add(terminalSec2Line);
                    }
                }
                else if (HTMLw == true)
                {
                    CommandItemClass terminalHTMLLine = new CommandItemClass();
                    terminalHTMLLine.Text = inputCommand;
                    terminalHTMLLine.IsHTMLMarkup = true;
                    commandList.Add(terminalHTMLLine);
                    HTMLw = false;
                }
                else if (inputCommand.ToLower() == "process: ping")
                {
                    if (pingProg ==0)
                    {
                        CommandItemClass terminalErrorpg1Line = new CommandItemClass();

                        terminalErrorpg1Line.FontSize = 20;
                        terminalErrorpg1Line.Text = "HIPAR is currently not connected to a network.";
                        terminalErrorpg1Line.Color = "#ff0000";

                        CommandItemClass terminalErrorpg2Line = new CommandItemClass();

                        terminalErrorpg2Line.FontSize = 20;
                        terminalErrorpg2Line.Text = "Would you like to connect it? (Y/N)";
                        terminalErrorpg2Line.Color = "#ff0000";
                        commandList.Add(terminalErrorpg1Line);
                        commandList.Add(terminalErrorpg2Line);
                        inputCommand = String.Empty;
                        ynl = 2;
                        yn = true;

                    }
                }
                else if (inputCommand.ToLower() == "process: network")
                {

                    CommandItemClass terminalNtwrkLine = new CommandItemClass();
                    terminalNtwrkLine.Text = "What network would you like to join?";
                    terminalNtwrkLine.IsTypeWriter = true;
                    commandList.Add(terminalNtwrkLine);
                    ntworkType = true;


                }
                else if (ntworkType == true)
                {
                    if (inputCommand.ToLower() == "gmhipar")
                    {

                        NetworkConnecting();


                    }
                    else
                    {
                        CommandItemClass terminalErrornLine = new CommandItemClass();

                        terminalErrornLine.FontSize = 20;
                        terminalErrornLine.Text = "Invalid Network Address";
                        terminalErrornLine.Color = "#ff0000";
                        terminalErrornLine.IsTypeWriter = true;

                        commandList.Add(terminalErrornLine);
                        ntworkType = false;
                    }
                }
                else
                {
                    Invalid();
                }
            }
            if (attempts == 5 && starte == false)
            {
                CommandItemClass terminalAttemptLine = new CommandItemClass();
                terminalAttemptLine.Text = "Hey there! It seems you're having some problems with HIPAR";
                terminalAttemptLine.Color = "#8fc2f8";
                terminalAttemptLine.IsTypeWriter = true;
                commandList.Add(terminalAttemptLine);
                CommandItemClass terminalAttempt2Line = new CommandItemClass();
                terminalAttempt2Line.Text = "Would you like some help? (Y/N)";
                terminalAttempt2Line.Color = "#8fc2f8";
                terminalAttempt2Line.IsTypeWriter = true;
                commandList.Add(terminalAttempt2Line);
                inputCommand = String.Empty;
                yn = true;
                ynl = 1;
                starte = true;
            }
            if (String.IsNullOrEmpty(inputCommand))
            {

            }
            else if (yn == true)
            {
                if (ynl == 1)
                {
                    if (inputCommand.ToLower() == "y")
                    {
                        CommandItemClass terminalAttemptyLine = new CommandItemClass();
                        terminalAttemptyLine.Text = "Great!";
                        terminalAttemptyLine.Color = "#8fc2f8";
                        terminalAttemptyLine.IsTypeWriter = true;
                        commandList.Add(terminalAttemptyLine);
                        CommandItemClass terminalAttempty2Line = new CommandItemClass();
                        terminalAttempty2Line.Text = "Invalid file name \"hipar_errorhelp.hpr\"";
                        terminalAttempty2Line.Color = "#ff0000";
                        terminalAttempty2Line.IsTypeWriter = true;
                        commandList.Add(terminalAttempty2Line);
                        yn = false;
                    }
                    else if (inputCommand.ToLower() == "n")
                    {
                        CommandItemClass terminalAttemptnLine = new CommandItemClass();
                        terminalAttemptnLine.Text = "Okay then! Go ahead.";
                        terminalAttemptnLine.Color = "#8fc2f8";
                        terminalAttemptnLine.IsTypeWriter = true;
                        commandList.Add(terminalAttemptnLine);
                        yn = false;
                    }
                    else
                    {
                        CommandItemClass terminalErrorynLine = new CommandItemClass();

                        terminalErrorynLine.FontSize = 20;
                        terminalErrorynLine.Text = inputCommand + " Is not a valid option";
                        terminalErrorynLine.Color = "#ff0000";
                        terminalErrorynLine.IsTypeWriter = true;

                        commandList.Add(terminalErrorynLine);
                    }
                }
                if (ynl == 2)
                {
                    if (inputCommand.ToLower() == "y")
                    {

                        CommandItemClass terminalNetworkcLine = new CommandItemClass();
                        terminalNetworkcLine.Text = "You can use the \"process: network\" to do so.";
                        terminalNetworkcLine.IsTypeWriter = true;
                        commandList.Add(terminalNetworkcLine);
                        yn = false;
                    }
                    else if (inputCommand.ToLower() == "n")
                    {
                        CommandItemClass terminalNetnLine = new CommandItemClass();
                        terminalNetnLine.Text = "Okay then! Go ahead.";
                        terminalNetnLine.Color = "#8fc2f8";
                        terminalNetnLine.IsTypeWriter = true;
                        commandList.Add(terminalNetnLine);
                        yn = false;
                    }
                    else
                    {
                        CommandItemClass terminalErrorynLine = new CommandItemClass();

                        terminalErrorynLine.FontSize = 20;
                        terminalErrorynLine.Text = inputCommand + " Is not a valid option";
                        terminalErrorynLine.Color = "#ff0000";
                        terminalErrorynLine.IsTypeWriter = true;

                        commandList.Add(terminalErrorynLine);
                    }
                }
            }

            inputCommand = String.Empty;

        }

    }
    private void terminalInit()
    {
        CommandItemClass terminalInitLine1 = new CommandItemClass();
        terminalInitLine1.IsHTMLMarkup = true;
        terminalInitLine1.Text = @"
        <pre style="" color: #ffffff; font-size: 24px;"">
          _    _ _____ _____        _____  
         | |  | |_   _|  __ \ /\   |  __ \ 
         | |__| | | | | |__) /  \  | |__) |
         |  __  | | | |  ___/ /\ \ |  _  / 
         | |  | |_| |_| |  / ____ \| | \ \ 
         |_|  |_|_____|_| /_/    \_\_|  \_\
        </pre>";
        commandList.Add(terminalInitLine1);
        CommandItemClass terminalInitLine2 = new CommandItemClass();
        terminalInitLine2.FontSize = 20;
        terminalInitLine2.Text = "Welcome to HIPAR V0.0.1alpha";
        terminalInitLine2.IsTypeWriter = true;
        commandList.Add(terminalInitLine2);
    }
    class CommandItemClass
    {
        public string Color { get; set; } = "#555555";
        public bool IsHTMLMarkup { get; set; }
        public string Text { get; set; }
        public DateTime Zaman { get; set; }
        public int FontSize { get; set; } = 16;
        public bool IsTypeWriter { get; set; }
    }
    private async Task Hisuii()
    {
        string url = "https://www.who.int/news-room/fact-sheets/detail/suicide";
        await jsRuntime.InvokeAsync<object>("open", url, "_blank");
    }
    private async Task Knowi()
    {
        string url = "https://rezero.fandom.com/wiki/Rem";
        await jsRuntime.InvokeAsync<object>("open", url, "_blank");
    }
    private void Invalid()
    {
        attempts++;
        CommandItemClass terminalErrorLine = new CommandItemClass();

        terminalErrorLine.FontSize = 20;
        terminalErrorLine.Text = "Invalid Argument";
        terminalErrorLine.Color = "#ff0000";
        terminalErrorLine.IsTypeWriter = true;

        commandList.Add(terminalErrorLine);

    }
    private void NetworkConnecting()
    {
        CommandItemClass terminalNtwrkYLine = new CommandItemClass();
        terminalNtwrkYLine.Text = "Connecting";
        terminalNtwrkYLine.IsTypeWriter = true;
        commandList.Add(terminalNtwrkYLine);
        CommandItemClass terminalNtwrk2YLine = new CommandItemClass();
        terminalNtwrk2YLine.Text = "Connected";
        terminalNtwrk2YLine.IsTypeWriter = true;
        commandList.Add(terminalNtwrk2YLine);
        ntworkType = false;
        NetworkConnected = true;
    }

    private void Guru ()
    {
        CommandItemClass terminalGuruLine = new CommandItemClass();
    terminalGuruLine.Text = @"
    <pre style="" color: #ffffff; font-size: 60px; font-family:'Public Pixel'; "">
     Guru in meditation!
         :(
    </pre>";
            terminalGuruLine.IsHTMLMarkup = true;
            commandList.Add(terminalGuruLine);
            Unable = true;
            Thread.Sleep(1500);
            Unable = false;
    }
}